# This is a basic workflow to help you get started with Actions

name: Build For Win/Mac DEMO

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
      - "v*.*.*"
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: build and release
    # The type of runner that the job will run on
    # zx: follow will create window-server an macos environments
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: .

    strategy:
      matrix:
        os: [ windows-2019, macos-10.15, ubuntu-latest ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # step1: check out repository
      - name: Check out git repository
        uses: actions/checkout@v2

      # step2: install node env
      - name: Install Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: '14'
          # need check package-lock.json or yarn.lock if registry changed
          cache: 'npm'

      # step3: npm install
      - name: npm install
        run: npm install

      # step4: build app for mac/win/linux
      - name: build windows app
        if: matrix.os == 'windows-2019'
        run: |
          export NODE_OPTIONS=--max_old_space_size=4096
          npm run build-win
          ls dist_electron
          mkdir dist_electron/build-app
          mv dist_electron/*.exe dist_electron/build-app
          mv dist_electron/latest*.yml dist_electron/build-app
        env:
          # todo

      - name: build mac app
        if: matrix.os == 'macos-10.15'
        run: |
          export NODE_OPTIONS=--max_old_space_size=4096
          npm run build-mac
          ls dist_electron
          mkdir dist_electron/build-app
          mv dist_electron/*.dmg dist_electron/build-app
          mv dist_electron/latest*.yml dist_electron/build-app

        env:
          # todo

      - name: build linux app
        if: matrix.os == 'ubuntu-latest'
        run: |
          export NODE_OPTIONS=--max_old_space_size=4096
          npm run build-linux
          ls dist_electron
          mkdir dist_electron/build-app
          mv dist_electron/*.{AppImage,deb,tar.gz,rpm} dist_electron/build-app
          mv dist_electron/latest*.yml dist_electron/build-app
        env:
          # todo

      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: ./dist_electron/build-app

      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./dist_electron/build-app/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
